pid               .nginx.pid;
worker_processes  auto;
error_log         /dev/stdout warn;

events {
    worker_connections 1024;
}

http {
    log_format  main '[$time_iso8601] $remote_addr $upstream_cache_status '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent"';

    access_log  /dev/stdout main;

    # Configure nginx to reuse connections when connecting to the upstream
    proxy_http_version  1.1;
    proxy_set_header    Connection "";

    # Cache responses from the upstream
    proxy_cache       cache;
    proxy_cache_path  cache levels=2 keys_zone=cache:10m
                      max_size=10g inactive=365d use_temp_path=off;

    # Use the following caching time unless overridden by response headers
    proxy_cache_valid  200 301 302 1m;
    proxy_cache_valid  any         0s;

    # Tune the cache options
    proxy_cache_revalidate         on;
    proxy_cache_use_stale          error timeout http_403 http_404 http_429 http_500 http_502 http_503 http_504;
    proxy_cache_background_update  off;
    proxy_cache_lock               on;

    # Remove headers set by the upstream cache
    proxy_hide_header  X-Cache;
    proxy_hide_header  X-Cache-Status;
    proxy_hide_header  X-Cache-Hits;
    proxy_hide_header  X-Cache-Status;
    proxy_hide_header  X-Served-By;
    proxy_hide_header  X-Timer;

    # Add headers with info from this cache
    add_header  X-Cache-Status $upstream_cache_status;

    # Resolver must be set to dynamically update the upstream server IP
    resolver  1.1.1.1 1.0.0.1 ipv6=off;

    # Connect to one of the upstream servers
    upstream upstream {
        server     127.0.0.1:8281;
        server     127.0.0.1:8282 backup;
        keepalive  32;
    }

    server {
      listen  8281;

      location / {
        proxy_pass  http://archlinux.mirror.digitalpacific.com.au$request_uri;
      }
    }

    server {
      listen  8282;

      location / {
        proxy_pass  http://ftp.iinet.net.au/pub/archlinux$request_uri;
      }
    }

    server {
        listen  8280;

        location / {
            proxy_pass  http://upstream;

            # Required to fail over to backup upstream
            proxy_next_upstream  error timeout http_403 http_404 http_429 http_500 http_502 http_503 http_504;
        }
    }
}
